#            _     _       _
#   _____  _| |__ | | ____| |
#  / __\ \/ / '_ \| |/ / _` |
#  \__ \>  <| | | |   < (_| |
#  |___/_/\_\_| |_|_|\_\__,_|

# STATE/FLAGS {{
# tiled - floating
super + t
	bspc query --nodes -n focused.tiled && state=floating || state=tiled; \
	bspc node --state \~$state
# tiled - pseudo_tiled
super + p
	bspc node --state \~pseudo_tiled
# tiled - fullscreen
super + f
	bspc node --state \~fullscreen

# set marked,locked,sticky,private flag
super + {m,x,s,z}
	bspc node -g {marked,locked,sticky,private}

# }}

# MOVE {{
# focus/swap the node in the given direction
#super + {_,shift + }{h,j,k,l}
#	bspc node -{f,s} {west,south,north,east}


# move a floating node
#alt + {h,j,k,l}
#	bspc node -v {-20 0,0 20,0 -20,20 0}

# change node focus
super + {h,j,k,l}
	bspc node -f {west,south,north,east}

# swap tiled node or move floating node
super + shift + {h,j,k,l}
	bspwm_move.sh {west,south,north,east}

# focus/swap the last node/desktop
super + {grave,shift + grave,apostrophe}
	bspc {node -f last.local,desktop -f last,node --swap last}

# focus or send to the given desktop
super + {_,shift +}g
	bspc node {-f,-s} biggest.local

# focus the next/previous node in the current desktop
super + {_,shift + }n
	bspc node -f {next,prev}.local

# move node to other monitor
ctrl + shift + {h,l}
    bspc node --to-desktop {prev,next} --focus

# floating node to top left
alt + ctrl + k
    preset 'top-left'

# floating node to bottom left
alt + ctrl + j
    preset 'bottom-left'

# floating node to right (vertical)
alt + ctrl + l
    preset 'vertical-right'

# floating node to left (wide vertical)
alt + ctrl + h
    preset 'wide-vertical-left'

# floating node to center
alt + ctrl + s
    preset 'center'

# }}

# RESIZE {{
# expand a window by moving one of its side outward
#ctrl + super + {h,j,k,l}
#	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
#ctrl + super + shift + {h,j,k,l}
#	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# resize node
ctrl + super + {h,j,k,l}
	bspwm_resize.sh {west,south,north,east}

# resize gaps
ctrl + alt + g: {k,j}
      bspc config -d focused window_gap "$(($(bspc config -d focused window_gap) {-,+} 5 ))"

# }}

# DESKTOP {{
# focus next/previous desktop
super + {_,shift + }Tab
	bspc desktop --focus {next,prev}.occupied

# move/send node to selected desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

# move node to selected desktop
alt + shift + {1-9,0}
	bspc node --to-desktop ^{1-9,10} --focus

alt + {1-9,0}
     summondesktop.sh {1-9,0}

# }}

# LAYOUTS {{
# flip layout vertically/horizontally
super + {v,b}
	bspc node @/ --flip {vertical,horizontal}

# rotate node tree
super + {_,shift +} r
   bspc node @/ -R {90,270}

# circulate the leaves of the tree
super + {_,shift + } c
	bspc node @/ --circulate {forward,backward}

# enable/disable monocle layout
super + {_,shift + }space
	bspc desktop --layout {next,prev}

# make split ratios equal/balanced
super + shift + {e,b}
	bspc node @/ {--equalize,--balance}

# }}

# PRESELECTION {{
# new split
alt + shift + {h,j,k,l}
	bspc node -p {west,south,north,east}
super + alt + {p,b,comma,period}
	bspc node --focus @{parent,brother,first,second}
# cancel preselection
alt + {_,shift +} c
	{bspc node -p cancel,bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel}

# }}

# HIDEN {{
# scratchpad
super + F1
 	id=$(head -1 /tmp/scratchid);\
 	bspc node $id --flag hidden;bspc node -f $id

# un/hide currently active node
super + {_,shift +} u
    toggle {hide,show}

# un/hide currently active node
super + {_,shift +} w
	{dmenuhidden,bspc node -g sticky; bspc node -g hidden}

# }}

# APPLICATION {{
# kill node
super + {_,shift + }q
	bspc node -{c,k}
# dmenu desktop
super + d
	j4-dmenu-desktop
# open terminal
super + Return
	$TERMINAL
# open terminal in the same dir
super + shift + Return
	open-terminal-here
# open file manager
alt + f
	$TERMINAL -e $FILE
# open network configuration
alt + n
	$TERMINAL -e nmtui
# open browser
alt + w
	$BROWSER
# open mpd client
alt + m
	$TERMINAL -e ncmpcpp
# open neovim
alt + v
	$TERMINAL -e nvim
# open sound configurations
alt + a
	$TERMINAL -e alsamixer
# open mail client
alt + e
	$TERMINAL -e neomutt
# show help
super + F2
	 $TERMINAL --class float -e show_help.sh

# }}

# SCRIPTS {{
# open menu for mpd
super + ctrl + slash
	dmenumpd
# open new browser tab menu
super + ctrl + o
	dmenunewtab
# open passmenu
super + ctrl + p
	passmenu
# opem menu for edit configuration file
super + ctrl + e
	dmenuedit
# show unicode symbols
super + ctrl + i
	dmenuunicode
# open tmux menu
super + ctrl + t
	dmenutmux
# reload programs
super + ctrl + Delete
	dmenureload
# lock, shutdown ,reboot, exit?
super + ctrl + m
	dmenupower
# make screenshot
super + End
	dmenuscreen
# record screen
super + ctrl + Insert
	dmenurecord
# kill recording
super + ctrl + w
	dmenurecord kill; notify-send "Recording finished"
# mount, umount device
super + ctrl + d
	ANS="$(printf "mount\numount" | dmenu -p 'Device')"; case "$ANS" in; mount) dmenumount;; umount) dmenuumount; esac
# display information
super + slash
	notify-send \
	"$(date "+%a %d %b - %I:%M %p")" \
	"Desktop: $(bspc query -D -d focused --names)\n\
	Volume: $(amixer -D pulse get Master | grep -o '[0-9][0-9]*%' | head -1)\n\
	$(acpi)"
# show clicboard content
super + Insert
	showclip
# lock screen
super + ctrl + x
	prompt "Lock screen" "slock & mpc pause"
# shutdown computer
super + ctrl + q
	prompt "Shutdown computer?" "shutdown -h now"
# reboot computer
super + ctrl + BackSpace
	prompt "Reboot computer?" "reboot"
# kill xorg
super + Escape
	prompt 'Leave Xorg?' 'killall Xorg'
# update OS
super + ctrl + u
	prompt "Update packages?" "update"

# Click
#alt + s
#	click_desktop.sh; \
#	xdotool mousedown 1; sleep 0.2; xdotool mouseup 1

# Open terminal if desktop is empty
~button1
	click_desktop.sh


# }}

# BACKLIGHT / VOLUME {{
# increase the volume (mpd or alsa)
super + {equal,shift + plus}
	{amixer sset Master 5%+,mpc volume +5}
# decrease the volume (mpd or alsa)
super {_,shift} + minus
	{amixer sset Master 5%-,mpc volume -5}

# mute the sound
super + shift + m
	amixer sset Master toggle

# increase the backlight
alt + {_,shift +} equal
	{xbacklight -inc 15, sudo -A keybacklight -inc}
# decrease the backlight
alt  + {_,shift +} minus
	{xbacklight -dec 15, sudo -A keybacklight -dec}
{XF86MonBrightnessDown,XF86MonBrightnessUp}
	{xbacklight -dec 15,xbacklight -inc 15}

# }}

# MPD {{
# pause audio
super + shift + p
	mpc toggle
# changes to next/previous tracks
super + {comma,period}
	mpc {prev; dunstify "$(mpc current)",next; dunstify "$(mpc current)"}
# restart track
super + shift + less
	mpc seek 0%
# seek foward in song
super + {_,shift +} bracketright
	mpc seek +{10,120}
# seek backward in song
super + {_,shift +} bracketleft
	mpc seek -{10,120}

# }}

# MEDIA KEYS {{
# Audiokeys
XF86AudioMute
	amixer sset Master toggle
XF86Audio{Raise,Lower}Volume
	amixer sset Master 5%{+,-}
XF86Audio{Next,Prev}
	mpc {next,prev}
XF86Audio{Pause,Play,Stop}
	mpc {pause,play,stop}
XF86Audio{Rewind,Forward}
	mpc seek {-,+}10
XF86AudioMedia
	$TERMINAL -e ncmpcpp

# }}

# vim: set foldmarker={{,}} foldlevel=0 foldmethod=marker nospell:
