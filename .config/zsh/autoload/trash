#!/usr/bin/env zsh
# Simple trash script
#
# trash-put [paths]
#   Move files to trash directory
#
# trash-list [paths]
#   List files from trash using globs
#
# trash-find <args for find>
#   List files from trash using find
#
# trash-restore(-interactive) [paths]
#   Restore files from trash
#
# trash-remove(-interactive) [paths]
#   Remove files from trash
#
: ${TRASH_DIR:=~/.local/share/trash}

function trash-put() {
  touch -c $*
  mkdir -p ${TRASH_DIR}${PWD}
  mv -vi $* $_
}

function trash-find() {
  find $TRASH_DIR $*
}

function trash-list() {
  dirs=(${${*:-$PWD}:a})
  local files=(${TRASH_DIR}${^~dirs%/}/**/*(NDOm))
  if [[ -z $files ]]; then
    print "No files trashed from directory(ies) (${dirs})"
    return
  fi
  for f in $files; do
    print "${$(stat -c '%y' $f)%%.*} ${f##${TRASH_DIR}}"
  done
}

function trash-restore() {
  mv -vi ${TRASH_DIR}/$^~* $PWD
}

function trash-remove() {
  rm -vrf ${TRASH_DIR}/$^~*
}

function trash-restore-interactive() {
  dirs=(${${*:-$PWD}:a})
  local files=(${TRASH_DIR}${^~dirs%/}/**/*(NDOm))
  if [[ -z $files ]] then
    print "No files trashed from directory(ies) (${dirs})"
    return
  fi
  local decision
  while :; do
    # display menu
    local length=$((${#${#files}}))
    for (( i=1; i<=$#files; i++ )); do
      print -f "  %-${length}d :: ${$(stat -c '%y' $files[i])%%.*} ${files[i]##${TRASH_DIR}}\n" "$i"
    done
    read decision"?What fiile to restore [1..${#files}]: "
    [[ -z $decision ]] && break
    # range
    if [[ $decision =~ '^-?[0-9]+\.\.-?[0-9]+$' ]]; then
      local range=(${files[${decision%%.*}, ${decision##*.}]})
      if [[ -z $range ]]; then
        print "Invalid range.\n"
        continue
      fi
      mv -vi $range $PWD
      break
    # single index
    elif [[ $decision =~ '^-?[0-9]+$' ]]; then
      if (( ${decision#-} > $#files )); then
        print "Invalid index.\n"
        continue
      fi
      mv -vi $files[decision] $PWD
      break
    else
      break
    fi
  done
}

function trash-remove-interactive() {
  dirs=(${${*:-$PWD}:a})
  local files=(${TRASH_DIR}${^~dirs%/}/**/*(NDOm))
  if [[ -z $files ]]; then
    print "No files trashed from directory(ies) (${dirs})"
    return
  fi
  local decision
  while :; do
    # display menu
    local length=$((${#${#files}}))
    for (( i=1; i<=$#files; i++ )); do
      print -f "  %-${length}d :: ${$(stat -c '%y' $files[i])%%.*} ${files[i]##${TRASH_DIR}}\n" "$i"
    done
    read decision"?What fiile to remove [1..${#files}]: "
    [[ -z $decision ]] && break
    # range
    if [[ $decision =~ '^-?[0-9]+\.\.-?[0-9]+$' ]]; then
      local range=(${files[${decision%%.*}, ${decision##*.}]})
      if [[ -z $range ]]; then
        print "Invalid range.\n"
        continue
      fi
      rm -vrf $range
      break
    # single index
    elif [[ $decision =~ '^-?[0-9]+$' ]]; then
      if (( ${decision#-} > $#files )); then
        print "Invalid index.\n"
        continue
      fi
      rm -vrf $files[decision]
      break
    else
      break
    fi
  done
}
