#!/usr/bin/env zsh
#                           ██            ████
#                          ░░            ░██░
#   ██████  ██   ██  ██████ ██ ███████  ██████  ██████
#  ██░░░░  ░░██ ██  ██░░░░ ░██░░██░░░██░░░██░  ██░░░░██
# ░░█████   ░░███  ░░█████ ░██ ░██  ░██  ░██  ░██   ░██
#  ░░░░░██   ░██    ░░░░░██░██ ░██  ░██  ░██  ░██   ░██
#  ██████    ██     ██████ ░██ ███  ░██  ░██  ░░██████
# ░░░░░░   ██      ░░░░░░  ░░ ░░░   ░░   ░░    ░░░░░░
#        ░░
#
#█▓▒░ vars
#local full=▓
#local empty=░
local full=━
#local empty=━
#local empty=─
#local full=┅
local empty=┄

for os in /etc/os-release /usr/lib/os-release; do . $os 2>/dev/null; done
local distro=$NAME
local kernel=${$(uname -r)%%-*}
local pkgs=$(pacman -Qqs | wc -l)
local wm=$(awk '/^exec/ {print $2; exit}' ~/.xinitrc)
local font='Hack Nerd Font'
local colors='iceberg'

#█▓▒░ progress bar
function drawbar() {
  local perc=$1
  local size=$2
  local length=$((perc * size / 100))
  local color=${3-34}
  for (( i=0; i < 10; i++ )); do
    if (( $i < $length )); then
      print -Pn "\e[1;${color}m${full}"
    else
      print -Pn "\e[0;${color}m${empty}"
    fi
  done
}

#█▓▒░ colors
print
for (( i=0; i <= 6; i++ )); do
  print -n "\e[$((i + 41));$((i + 30))m█▓▒░"
done
print "\e[37m█\e[0m▒░\n"

#█▓▒░ greets
print " \e[0m  hello \e[34m$USER\e[0m, i'm \e[34m$HOST\e[0m\n"

#█▓▒░ environment
print " \e[1;33m      distro \e[0m$distro"
print " \e[1;33m      kernel \e[0m$kernel"
print " \e[1;33m    packages \e[0m$pkgs"
print " \e[1;33m          wm \e[0m$wm"
print " \e[1;33m        font \e[0m$font"
print " \e[1;33m      colors \e[0m$colors\n"

#█▓▒░ cpu
local cpu=$(awk '/cpu/ {usage=($2+$4)*100/($2+$4+$5); exit} END {print int(usage)}' /proc/stat)
print -f "    \e[0;34m cpu \e[1;34m%-5s %s\n" $cpu% $(drawbar $cpu 10)

#█▓▒░ ram
free | while read -r mem total used _; do
  if [[ $mem == 'Mem:' ]]; then
    local ram=$((100 * used / total))
    break
  fi
done
print -f "    \e[0;34m ram \e[1;34m%-5s %s\n" $ram% $(drawbar $ram 10)

#█▓▒░ battery
local battery=(/sys/class/power_supply/BAT?)
local charge=$((100 * $(<$battery/charge_now) / $(<$battery/charge_full)))
(( $charge <= 20 )) && color=31 || color=34
print -f "    \e[0;${color}m bat \e[1;${color}m%-5s %s\n" $charge% $(drawbar $charge 10 $color)

#█▓▒░ volume
local line vol stat
amixer get Master | while IFS=[] read -r line vol stat; do
  if [[ $line ==  *Right:* ]]; then
    [[ $stat == *off* ]] && color=31 || color=34
    vol=${vol%\%}
    break
  fi
done
print -f "    \e[0;${color}m vol \e[1;${color}m%-5s %s\n" $vol% $(drawbar $vol 10 $color)

#█▓▒░ temperature
temp=$(sensors | awk '/Core 0/ {print int(gensub(/+(.*)°C/, "\\1", "g", $3))}')
(( $temp >= 70 )) && color=31 || color=34
print -f "    \e[0;${color}mtemp \e[1;${color}m%-5s %s\n\n" $temp°C $(drawbar $temp 15 $color)
